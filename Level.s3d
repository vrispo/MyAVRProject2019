class level{
	var wall_mesh;
	var wall_obj_array;
	var floor_mesh;
	var wall_material;
	var wall_texture;
	var floor_material;
	var floor_texture;
	var level_matrix;
	init(level_textfile);
	draw();
};

function level::init(level_textfile){
	wall_texture = CVmTexture("mattoni03.png");
	wall_material = CVmMaterial();
	wall_material.setTexture(wall_texture);
	wall_material.changetextureparams(VR_V_TILING, 3); //greater if you want smaller
	wall_obj_array = array(0);
	
	wall_mesh = CVmNewMesh(VRP_BOX);
	wall_mesh.setmaterial(wall_material);
	wall_mesh.scale(1.0,3.0,1.0);
	var f = loadfile(level_textfile);
	
	var num_rows = len(f);
	var num_columns = len(f[0]);
	level_matrix = array(num_rows);
	for(var i=0; i<num_rows ; i++){
		level_matrix[i]= array(num_columns);
		for(var j=0; j<num_columns; j++){
			if(f[i][j]== "*"){
				level_matrix[i][j] = 1;
				var t = CVmObj(wall_mesh);
				t.setposition(j, 0.0, i);
				aadd(wall_obj_array,t);
			}
			else{
				level_matrix[i][j] = 0;
			}
		}
	}

	floor_material = CVmMaterial();
	floor_texture = CVmTexture("MARMO.png");
	floor_material.setTexture(floor_texture);
	floor_material.changetextureparams(VR_U_TILING,4);
	floor_material.changetextureparams(VR_V_TILING,4);
	
	floor_mesh = CVmNewMesh(VRP_BOX);
	floor_mesh.scale(num_columns, 1.0 ,num_rows);
	floor_mesh.translate(0.0, -1.0, 0.0);
	floor_mesh.setmaterial(floor_material);
	floor_mesh.modulatematerials(0,1,0,1); //green completely opaque
}

function level::draw(){
	foreach (var t in wall_obj_array)
		t.draw();
	floor_mesh.draw();
}